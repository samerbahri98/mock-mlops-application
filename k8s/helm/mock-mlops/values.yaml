---
replicaCount: 1

ingress:
  environment: production
  branch: main
  hostname:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  ws:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    paths:
      - path: /api/websocket
        pathType: Prefix
  paths:
    - path: /
      pathType: Prefix
  tls: []

portainer:
  image:
    repository: portainer/portainer-ce
    pullPolicy: IfNotPresent
    tag: "linux-amd64-2.15.1-alpine"
  imagePullSecrets: []
  podSecurityContext: {}
  podAnnotations: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
  vars:
    password:
extra:
  image:
    repository:
      ghcr.io/samerbahri98/mock-mlops-application-extra-services
    pullPolicy: IfNotPresent
    tag: "main"
  imagePullSecrets: []
  podSecurityContext: {}
  podAnnotations: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  service:
    type: ClusterIP
    port: 80
agent:
  enabled: true
  port: 9001
  image:
    repository: portainer/agent
    pullPolicy: IfNotPresent
    tag: "linux-amd64-2.15.1-alpine"

mysql:
  vars:
    host:
    username:
    password:
    db:

keycloak:
  vars:
    clientID:
    clientSecret:
    host:
    realm:

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  annotations: {}
  name: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
