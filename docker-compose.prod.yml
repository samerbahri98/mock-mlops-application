---
version: '3'
services:
  db:
    image: "percona:${PERCONA_VERSION}"
    container_name: db
    ports:
      - 3306:3306
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - percona:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d
  adminer:
    image: "adminer:${ADMINER_VERSION}"
    container_name: adminer
    hostname: adminer
    restart: always
    depends_on:
      - db
    expose:
      - 8080
  keycloak:
    image: "quay.io/keycloak/keycloak:${KEYCLAOK_VERSION}"
    container_name: keycloak
    hostname: keycloak
    restart: always
    environment:
      DB_VENDOR: ${KEYCLAOK_DB_VENDOR}
      DB_USER: ${KEYCLAOK_DB_USER}
      DB_PASSWORD: ${KEYCLAOK_DB_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
      REDIRECT_SOCKET: "proxy-http"
      KEYCLOAK_FRONTEND_URL: http://localhost/auth
    expose:
      - 8080
  nginx:
    image: "nginx:${NGINX_VERSION}"
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - keycloak
      - adminer
      - portainer
      - extra-services
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer:/data
    expose:
      - 9000
    networks:
      - kind
      - default
    command:
      - --admin-password
      - ${PORTAINER_PASSWORD_HASHED}
  extra-services:
    image: |
      "ghcr.io/samerbahri98/mock-mlops-application-extra-services:${BRANCH}"
    container_name: extra-services
    restart: always
    env_file:
      - .env
    expose:
      - 5000

  k8s-client:
    image: alpine
    container_name: k8s-client
    volumes:
      - ./kind/kubectl:/usr/local/bin/kubectl
      - ./kind/k9s:/usr/local/bin/k9s
      - ./_cache/docker.admin.conf:/root/.kube/admin.conf
    command: tail -f /dev/null
    networks:
      - kind
      - default
    environment:
      KUBECONFIG: /root/.kube/admin.conf

volumes:
  percona: {}
  portainer: {}

networks:
  kind:
    external: true
  default:
    external:
      name: mock-mlops-network
